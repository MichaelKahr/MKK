package GUI;

import BL.Item;
import BL.PlayerModel;
import BL.PlayerRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author mikeykahr
 */
public class MkkGUI extends javax.swing.JFrame {

    public static PlayerModel model = new PlayerModel();
    private final DefaultListModel lmodel = new DefaultListModel();
    private int selectedRow;
    private int[] selectedRows;

    /**
     * Creates new form MkkGUI
     */
    public MkkGUI() {
        initComponents();
        jtOut.setModel(model);
        jtOut.setDefaultRenderer(Object.class, new PlayerRenderer());
        jtOut.setShowGrid(true);
        liOut.setModel(lmodel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPTable = new javax.swing.JPopupMenu();
        jmFight = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmAddPlayer = new javax.swing.JMenuItem();
        jmAddItem = new javax.swing.JMenuItem();
        jmDelete = new javax.swing.JMenuItem();
        jPList = new javax.swing.JPopupMenu();
        jmAdd = new javax.swing.JMenuItem();
        jmRemove = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtOut = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        liOut = new javax.swing.JList<>();

        jmFight.setText("Fight");
        jmFight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmFightActionPerformed(evt);
            }
        });
        jPTable.add(jmFight);

        jMenu1.setText("Manage Players");

        jmAddPlayer.setText("Add Player");
        jmAddPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAddPlayerActionPerformed(evt);
            }
        });
        jMenu1.add(jmAddPlayer);

        jmAddItem.setText("Add item");
        jmAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAddItemActionPerformed(evt);
            }
        });
        jMenu1.add(jmAddItem);

        jmDelete.setText("Delete Selected Player");
        jmDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(jmDelete);

        jPTable.add(jMenu1);

        jmAdd.setText("Add Item");
        jmAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAddActionPerformed(evt);
            }
        });
        jPList.add(jmAdd);

        jmRemove.setText("Remove Item");
        jmRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmRemoveActionPerformed(evt);
            }
        });
        jPList.add(jmRemove);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setComponentPopupMenu(jPTable);

        jtOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtOut.setComponentPopupMenu(jPTable);
        jtOut.getTableHeader().setResizingAllowed(false);
        jtOut.getTableHeader().setReorderingAllowed(false);
        jtOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtOutMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtOutMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtOut);

        liOut.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        liOut.setComponentPopupMenu(jPList);
        jScrollPane2.setViewportView(liOut);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmAddPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAddPlayerActionPerformed
        PlayerDlg dialog = new PlayerDlg(this, true);
        dialog.setVisible(true);
        if (dialog.isOk()) {
            model.add(dialog.getP());
        }
    }//GEN-LAST:event_jmAddPlayerActionPerformed

    private void jmFightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmFightActionPerformed
        int[] sel = jtOut.getSelectedRows();
        if (sel.length != 2) {
            JOptionPane.showMessageDialog(null, "Please select 2 Players!");
        } else {
            try {
                model.fight(model.getPlayers().get(sel[0]), model.getPlayers().get(sel[1]));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jmFightActionPerformed

    private void jtOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtOutMouseClicked
        selectedRow = jtOut.getSelectedRow();
        selectedRows = jtOut.getSelectedRows();
        lmodel.clear();
        for (Item i : model.getPlayers().get(selectedRow).getItems()) {
            lmodel.addElement(i);
        }
//        taItems.setText("");
//        for (Item i : model.getPlayers().get(selectedRow).getItems()) {
//            taItems.append(i.toString() + "\n");
//        }

    }//GEN-LAST:event_jtOutMouseClicked

    private void jmAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAddItemActionPerformed
        ItemDlg dialog = new ItemDlg(this, true);
        dialog.setVisible(true);
        if (dialog.isOk()) {
            model.getPlayers().get(selectedRow).addItem(dialog.getI());
        }
    }//GEN-LAST:event_jmAddItemActionPerformed

    private void jtOutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtOutMouseReleased

    }//GEN-LAST:event_jtOutMouseReleased

    private void jmDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmDeleteActionPerformed
        model.delete(model.getPlayers().get(selectedRow));
    }//GEN-LAST:event_jmDeleteActionPerformed

    private void jmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAddActionPerformed
        ItemDlg dialog = new ItemDlg(this, true);
        dialog.setVisible(true);
        if (dialog.isOk()) {
            model.getPlayers().get(selectedRow).addItem(dialog.getI());
        }
    }//GEN-LAST:event_jmAddActionPerformed

    private void jmRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmRemoveActionPerformed
        model.getPlayers().get(selectedRow).removeItem(model.getPlayers().get(selectedRow).getItems().get(liOut.getSelectedIndex()));
        liOut = new JList(lmodel);
    }//GEN-LAST:event_jmRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MkkGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MkkGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MkkGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MkkGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MkkGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPopupMenu jPList;
    private javax.swing.JPopupMenu jPTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem jmAdd;
    private javax.swing.JMenuItem jmAddItem;
    private javax.swing.JMenuItem jmAddPlayer;
    private javax.swing.JMenuItem jmDelete;
    private javax.swing.JMenuItem jmFight;
    private javax.swing.JMenuItem jmRemove;
    private javax.swing.JTable jtOut;
    private javax.swing.JList<String> liOut;
    // End of variables declaration//GEN-END:variables
}
